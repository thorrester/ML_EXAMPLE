CREATE OR REPLACE TABLE `{staging_project}.{staging_dataset}.SKU_STR_SALES_HIST`
PARTITION BY SLS_DT
--CLUSTER BY SKU_NBR, STR_NBR
OPTIONS(expiration_timestamp=TIMESTAMP(DATE_ADD(CURRENT_DATE, INTERVAL 7 DAY)))
AS(

SELECT
FSCL_YR
, SLS_DT
, SKU_NBR
, SKU_CRT_DT
, STR_NBR
, CONCAT(CAST(SKU_NBR AS STRING),'-', CAST(SKU_CRT_DT AS STRING), '-', STR_NBR) AS SKU_STR_ID
, ROUND(SUM(CASE WHEN SLS.RECALLED_TXN.ORIG_CD.CORD_SRC_PRCSS_CD = 9   THEN  IFNULL(SLS.EXT_RETL_AMT,0) + IFNULL(SLS.TOT_GDISC_DTL_AMT ,0) ELSE 0 END),2) STH_SLS
, ROUND(SUM(CASE WHEN SLS.RECALLED_TXN.ORIG_CD.CORD_SRC_PRCSS_CD = 10  THEN  IFNULL(SLS.EXT_RETL_AMT,0) + IFNULL(SLS.TOT_GDISC_DTL_AMT ,0) ELSE 0 END),2) MA_SLS
, ROUND(SUM(CASE WHEN SLS.RECALLED_TXN.ORIG_CD.CORD_SRC_PRCSS_CD = 35  THEN  IFNULL(SLS.EXT_RETL_AMT,0) + IFNULL(SLS.TOT_GDISC_DTL_AMT ,0) ELSE 0 END),2) BOPIS_SLS
, ROUND(SUM(CASE WHEN SLS.RECALLED_TXN.ORIG_CD.CORD_SRC_PRCSS_CD = 41  THEN  IFNULL(SLS.EXT_RETL_AMT,0) + IFNULL(SLS.TOT_GDISC_DTL_AMT ,0) ELSE 0 END),2) BOSS_SLS
, ROUND(SUM(CASE WHEN SLS.RECALLED_TXN.ORIG_CD.CORD_SRC_PRCSS_CD = 49  THEN  IFNULL(SLS.EXT_RETL_AMT,0) + IFNULL(SLS.TOT_GDISC_DTL_AMT ,0) ELSE 0 END),2) BODFS_SLS
, ROUND(SUM(CASE WHEN SLS.RECALLED_TXN.ORIG_CD.CORD_SRC_PRCSS_CD IN (9,10,35,41,49) THEN IFNULL(SLS.EXT_RETL_AMT,0) + IFNULL(SLS.TOT_GDISC_DTL_AMT ,0) ELSE 0 END),2) ONLINE_SLS
, ROUND(SUM(CASE WHEN SLS.RECALLED_TXN.ORIG_CD.CORD_SRC_PRCSS_CD NOT IN (9,10,35,41,49) THEN IFNULL(SLS.EXT_RETL_AMT,0) + IFNULL(SLS.TOT_GDISC_DTL_AMT ,0) ELSE 0 END),2) STR_SLS
, ROUND(SUM(IFNULL(SLS.EXT_RETL_AMT,0) + IFNULL(SLS.TOT_GDISC_DTL_AMT ,0)),2) GROSS_SLS_AMT
, SUM(UNT_SLS) GROSS_UNT_SLS
, SUM(CASE WHEN UNT_SLS < 0 THEN UNT_SLS ELSE 0 END ) GROSS_RTN_UNTS
FROM
(
  SELECT
    HDR.SLS_DT,
    HDR.STR_NBR,
    HDR.RGSTR_NBR,
    HDR.POS_TRANS_ID,
    HDR.POS_TRANS_TYP_CD,
    DTL.SKU_NBR,
    DTL.SKU_CRT_DT,
    DTL.EXT_RETL_AMT,
    DTL.TOT_GDISC_DTL_AMT,
    DTL.UNT_SLS  AS UNT_SLS,
    DTL.POS_SEQ_NBR AS DTL_POS_SEQ_NBR,
    (
      SELECT
        STRUCT
          (
            RTXN.POS_SEQ_NBR AS RTXN_POS_SEQ_NBR,
            RTXN.CUST_ORD_NBR,
            RTXN.ORIG_CD
          )
      FROM
          (
            SELECT
              RTXN.POS_SEQ_NBR,
              RTXN.CUST_ORD_NBR,
              RTXN.ORIG_CD,
              ROW_NUMBER() OVER (PARTITION BY RDTL ORDER BY RTXN.POS_SEQ_NBR) AS ROW_NBR
            FROM
              UNNEST(HDR.RECALLED_TXN) RTXN
              INNER JOIN UNNEST(RTXN.DTL_POS_SEQ_NBR) AS RDTL
            WHERE
              RDTL = DTL.POS_SEQ_NBR
          ) RTXN
      WHERE
        RTXN.ROW_NBR = 1
     ) AS RECALLED_TXN,
     DTL.EXTNL_REF_LINE_NBR
  FROM `{edw_project}.{edw_dataset_sls}.POS_SLS_TRANS_DTL` HDR
    INNER JOIN UNNEST(HDR.DTL) DTL
  ) SLS
INNER JOIN `{edw_project}.{edw_dataset_shared}.CAL_PRD_HIER_FD`  B
    ON SLS. SLS_DT = B. CAL_DT
WHERE FSCL_YR >= EXTRACT(YEAR FROM CURRENT_DATE) - 3
GROUP BY FSCL_YR, SLS_DT, SKU_NBR, SKU_CRT_DT, STR_NBR
);
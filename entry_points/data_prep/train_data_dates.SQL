### FOR FUTURE STATE --> SEPARATE THE FOLLOWING QUERIES INTO A TRAINING AND PREDICTION DAG IF RUNNING PREDICTIONS EVERY DAY
CREATE OR REPLACE TABLE `{staging_project}.{staging_dataset}.TRAIN_DATA_DATES`
PARTITION BY CAL_DT
CLUSTER BY SKU_NBR, STR_NBR
AS (

SELECT
PREDICTION_DATE CAL_DT
, SKU_NBR
, SKU_CRT_DT
, STR_NBR
, SKU_STR_ID
, CURR_RETL_AMT
#, AINV_OH_QTY
#, INV_OH_POSITION
, OOS_IND
, SHELF_OUT
, SHELF_LOW
, BINARY_OH_LABEL
, MULTI_CLASS_LABEL
, LOG_INVENTORY_DOLLARS
, WINDOW_
, 'TRAIN' DATA_IND
FROM `{staging_project}.{staging_dataset}.RANDOM_OH_ADJ`

UNION ALL

SELECT
  CAL_DT
, SKU_NBR
, SKU_CRT_DT
, STR_NBR
, SKU_STR_ID
, CURR_RETL_AMT
, NULL OOS_IND
, NULL SHELF_OUT
, NULL SHELF_LOW
, NULL BINARY_OH_LABEL
, NULL MULTI_CLASS_LABEL
, NULL LOG_INVENTORY_DOLLARS
, NULL WINDOW_
, 'PREDICT' DATA_IND
FROM (
      SELECT
        A. CAL_DT
      , A. SKU_NBR
      , A. SKU_CRT_DT
      , A. STR_NBR
      , B. SKU_STR_ID
      , A. CURR_RETL_AMT
      FROM `{edw_project}.{edw_dataset_schn_inv}.STR_SKU_ACINV_DLY` A
      INNER JOIN `{staging_project}.{staging_dataset}.THD_SKU_ACTIVE` B
        ON A. SKU_NBR = B. SKU_NBR
        AND A. SKU_CRT_DT = B. SKU_CRT_DT
        AND A. STR_NBR = B. STR_NBR

      WHERE 1=1
        AND CAL_DT = (SELECT MAX(PARTITIONDATE) FROM `{edw_project}.{edw_dataset_schn_inv}.STR_SKU_ACINV_DLY`)
        AND B. MAMA_SKU = 1
        AND B. SUB_DEPT_NBR <> '023F'
        AND IPR_REPLE_IND = 1
        AND A.CURR_RETL_AMT > .01
        AND SKU_VLCTY_CD IN ('A','B','C')
        AND OH_QTY > 0
        AND MIN_OH_QTY > 0
    )
);
CREATE OR REPLACE TABLE `{staging_project}.{staging_dataset}.PACKDOWN_MODEL_DATA_MASTER`
PARTITION BY CAL_DT
--CLUSTER BY SKU_NBR, STR_NBR
AS(
SELECT
  GENERATE_UUID() ID
, A. FSCL_YR
, A. SIN_MTH
, A. COS_MTH
, A. SIN_WK
, A. COS_WK
, A. SIN_DAY
, A. COS_DAY
, A. CAL_DT
, B. SUB_DEPT_NBR
, B. EXT_CLASS_NBR
, B. EXT_SUB_CLASS_NBR
, C. SKU_NBR
, C. SKU_CRT_DT
, C. STR_NBR
, A. SKU_STR_ID
, A. OOS_IND
, A. SHELF_OUT
, A. SHELF_LOW
, A. BINARY_OH_LABEL
, A. MULTI_CLASS_LABEL
, A. LOG_INVENTORY_DOLLARS
, A. SKU_VLCTY_CD
, B. STR_X
, B. STR_Y
, B. STR_Z
, A. CURR_RETL_AMT
, A. PC_CHG_LST_WK
, A. R12_AVG_UNTS_OH_RATIO
, A. R1_WEEK_AVG_UNTS_OH_RATIO
, A. R2_WEEK_AVG_UNTS_OH_RATIO
, A. R3_WEEK_AVG_UNTS_OH_RATIO
, A. R4_WEEK_AVG_UNTS_OH_RATIO
, OH_QTY
, PREV_1_DAY_OH
, PREV_2_DAY_OH
, PREV_3_DAY_OH
, PREV_4_DAY_OH
, PREV_5_DAY_OH
, PREV_6_DAY_OH
, (OH_QTY * A. CURR_RETL_AMT)                   AS CURR_INV_DLRS
, (PREV_1_DAY_OH * A. CURR_RETL_AMT)            AS PREV_1_DAY_INV_DLRS
, (PREV_2_DAY_OH * A. CURR_RETL_AMT)            AS PREV_2_DAY_INV_DLRS
, (PREV_3_DAY_OH * A. CURR_RETL_AMT)            AS PREV_3_DAY_INV_DLRS
, (PREV_4_DAY_OH * A. CURR_RETL_AMT)            AS PREV_4_DAY_INV_DLRS
, (PREV_5_DAY_OH * A. CURR_RETL_AMT)            AS PREV_5_DAY_INV_DLRS
, (PREV_6_DAY_OH * A. CURR_RETL_AMT)            AS PREV_6_DAY_INV_DLRS
, (OH_QTY * A. CURR_RETL_AMT * B. STR_X)        AS CURR_INV_DLRS_STR_X
, (OH_QTY * A. CURR_RETL_AMT * B. STR_Y)        AS CURR_INV_DLRS_STR_Y
, (OH_QTY * A. CURR_RETL_AMT * B. STR_Z)        AS CURR_INV_DLRS_STR_Z
, OO_QTY
, PREV_1_DAY_OO
, PREV_2_DAY_OO
, PREV_3_DAY_OO
, PREV_4_DAY_OO
, PREV_5_DAY_OO
, PREV_6_DAY_OO
, EXP_QTY
, PREV_1_DAY_EXP_QTY
, PREV_2_DAY_EXP_QTY
, PREV_3_DAY_EXP_QTY
, PREV_4_DAY_EXP_QTY
, PREV_5_DAY_EXP_QTY
, PREV_6_DAY_EXP_QTY
, CASE WHEN (PREV_1_DAY_OH) < (PREV_1_DAY_UNTS) THEN 1 ELSE 0 END INV_LESS_THAN_SLS_1DAY
, CASE WHEN (PREV_1_DAY_OH+PREV_2_DAY_OH) < (PREV_1_DAY_UNTS+PREV_2_DAY_UNTS) THEN 1 ELSE 0 END INV_LESS_THAN_SLS_2DAY
, CASE WHEN (PREV_1_DAY_OH+PREV_2_DAY_OH+PREV_3_DAY_OH) <(PREV_1_DAY_UNTS+PREV_2_DAY_UNTS+PREV_3_DAY_UNTS) THEN 1 ELSE 0 END INV_LESS_THAN_SLS_3DAY
, OH_GRTR_FIVE_PERC_CLSS
, CASE WHEN (PREV_1_DAY_UNTS + PREV_2_DAY_UNTS + PREV_3_DAY_UNTS + PREV_4_DAY_UNTS + PREV_5_DAY_UNTS + PREV_6_DAY_UNTS) = 0 AND OH_GRTR_FIVE_PERC_CLSS = 1 THEN 1 ELSE 0 END SLOW_MOV_1
, CASE WHEN (PREV_1_DAY_UNTS + PREV_2_DAY_UNTS + PREV_3_DAY_UNTS + PREV_4_DAY_UNTS + PREV_5_DAY_UNTS + PREV_6_DAY_UNTS) = 0 AND OH_GRTR_FIVE_PERC_CLSS = 0 THEN 1 ELSE 0 END SLOW_MOV_2
, NEG_OH_POS_SLS_FLG
, A. RCVD_OO
, A. RECV_QTY_FIXED
, A. RETURNED_QTY_FIXED
, A. PREV_1_DAY_UNTS_LY
, A. PREV_2_DAY_UNTS_LY
, A. PREV_3_DAY_UNTS_LY
, A. PREV_4_DAY_UNTS_LY
, A. PREV_5_DAY_UNTS_LY
, A. PREV_6_DAY_UNTS_LY
, A. UNT_SLS
, A. PREV_1_DAY_UNTS
, A. PREV_2_DAY_UNTS
, A. PREV_3_DAY_UNTS
, A. PREV_4_DAY_UNTS
, A. PREV_5_DAY_UNTS
, A. PREV_6_DAY_UNTS
, A. PREV_1_WEEK_UNTS
, A. PREV_2_WEEK_UNTS
, A. PREV_3_WEEK_UNTS
, A. PREV_4_WEEK_UNTS
, A. PREV_5_WEEK_UNTS
, A. PREV_6_WEEK_UNTS
, A. PREV_1_WK_TY_LY_DIFF
, A. PREV_2_WK_TY_LY_DIFF
, A. PREV_3_WK_TY_LY_DIFF
, A. PREV_4_WK_TY_LY_DIFF
, A. PREV_5_WK_TY_LY_DIFF
, A. PREV_6_WK_TY_LY_DIFF
, A. R13_AVG_OH_PER_DAY
, A. R12_AVG_UNTS_PER_DAY
, A. R12_AVG_OH_PER_DAY
, CASE WHEN A. PREV_1_DAY_OH <> 0 THEN COALESCE(SAFE_DIVIDE(A. PREV_1_DAY_OH,A. R12_AVG_UNTS_PER_DAY),-1) ELSE -1 END PREV_OH_AVG_UNTS_PERC_DIFF
, A. R13_SLS
, A. R13_UNTS
, A. R52_UNTS

, A. NBR_DAYS_ZERO_SLS
, A. DAYS_SINCE_LAST_SALE
, A. PCT_DAYS_ZERO_SLS
, ROUND(A. PCT_CHNC_ZERO_SLS,4) PCT_CHNC_ZERO_SLS
, LEAD_TIME
, WKS_SINCE_LAST_OH_CHG
, DAYS_SINCE_RCVD_FIN
, DAYS_SINCE_RCVD
, R13_RCVD_QTY
, R13_RCVD_QTY_FIN
, RCVD_QTY
, RCVD_QTY_FIN
, RCVD_QTY_PREV_1_DAY
, RCVD_QTY_FIN_PREV_1_DAY
, R12_NBR_ORDRS
, RCVD_QTY_LAST_52_WK
, RCVD_QTY_LAST_WK
, R12_NBR_ORDRS_RCPT
, A. NBR_VNDRS
, A. NBR_AUDTD
, PREV_FCST_WK0
, PREV_FCST_WK1
, PREV_FCST_WK2
, PREV_FCST_WK3
, PREV_FCST_WK4
, PREV_FCST_WK5
, PREV_FCST_WK6

, A. OH_CHG_PREV_WK_FLG
, B. AVG_RTN_UNTS
, B. AVG_R52_RTN_UNTS
, EMPTY_PKG_90_DAY_QTY
, A. OH_CHGS
, A. OH_CHG_LST_WK
, A. OH_CHG_TWICE_90_DAY
, A. OH_CHG_WTHN_2_DAY_RECPT
, A. SHRINK_FLG
, CASE WHEN OH_CHG_TWICE_90_DAY >= 1 AND OH_CHG_LST_WK >= 1 AND EMPTY_PKG_90_DAY_QTY >0 AND LEAST(DAYS_SINCE_RCVD,DAYS_SINCE_RCVD_FIN) <= 14 THEN 1 ELSE 0 END SHRINK_1
, CASE WHEN OH_CHG_TWICE_90_DAY >= 1 AND OH_CHG_LST_WK >= 1 AND EMPTY_PKG_90_DAY_QTY >0 AND LEAST(DAYS_SINCE_RCVD,DAYS_SINCE_RCVD_FIN) > 14  THEN 1 ELSE 0 END SHRINK_2
, CASE WHEN OH_CHG_TWICE_90_DAY >= 1 AND OH_CHG_LST_WK >= 1 AND EMPTY_PKG_90_DAY_QTY =0 AND LEAST(DAYS_SINCE_RCVD,DAYS_SINCE_RCVD_FIN) <= 14 THEN 1 ELSE 0 END SHRINK_3
, CASE WHEN OH_CHG_TWICE_90_DAY >= 1 AND OH_CHG_LST_WK >= 1 AND EMPTY_PKG_90_DAY_QTY =0 AND LEAST(DAYS_SINCE_RCVD,DAYS_SINCE_RCVD_FIN) > 14  THEN 1 ELSE 0 END SHRINK_4
, COALESCE(C. FUFILLMNT_PATH, 'UNKNOWN') FUFILLMNT_PATH
, C. WK_BOPIS_RTN_CNT
, C. MTH_BOPIS_RTN_CNT
, C. YR_BOPIS_RTN_CNT
, C. WK_BOPIS_CAN_CNT
, C. MTH_BOPIS_CAN_CNT
, C. YR_BOPIS_CAN_CNT
, C. WK_BOPIS_ORD_CNT
, C. MTH_BOPIS_ORD_CNT
, C. YR_BOPIS_ORD_CNT
, C. WK_BODFS_RTN_CNT
, C. MTH_BODFS_RTN_CNT
, C. YR_BODFS_RTN_CNT
, C. WK_BODFS_CAN_CNT
, C. MTH_BODFS_CAN_CNT
, C. YR_BODFS_CAN_CNT
, C. WK_BODFS_ORD_CNT
, C. MTH_BODFS_ORD_CNT
, C. YR_BODFS_ORD_CNT
, C. WK_BOSS_RTN_CNT
, C. MTH_BOSS_RTN_CNT
, C. YR_BOSS_RTN_CNT
, C. WK_BOSS_CAN_CNT
, C. MTH_BOSS_CAN_CNT
, C. YR_BOSS_CAN_CNT
, C. WK_BOSS_ORD_CNT
, C. MTH_BOSS_ORD_CNT
, C. YR_BOSS_ORD_CNT
, D. SHNK_PCT
, D. CLR_FLG
, CASE WHEN SUBSTR(CAST(CURR_RETL_AMT AS STRING),3) IN ('.01', '.03', '.06') THEN 1 ELSE 0 END RETL_CLR_FLG
, R13_AVG_OH_PER_DAY + R13_RCVD_QTY - R13_UNTS  CALCD_OH
, R13_AVG_OH_PER_DAY + R13_RCVD_QTY_FIN - R13_UNTS CALCD_OH_FIN
, (R13_AVG_OH_PER_DAY + R13_RCVD_QTY - R13_UNTS) * A. CURR_RETL_AMT     AS CALCD_INV_DLRS
, (R13_AVG_OH_PER_DAY + R13_RCVD_QTY_FIN - R13_UNTS) * A. CURR_RETL_AMT AS CALCD_INV_DLRS_FIN
, SAFE_DIVIDE(R13_UNTS,R13_RCVD_QTY)*100 R13_SELL_THROUGH
, SAFE_DIVIDE(R13_UNTS,R13_RCVD_QTY_FIN)*100 R13_SELL_THROUGH_FIN
, CASE WHEN (R13_AVG_OH_PER_DAY + R13_RCVD_QTY - R13_UNTS) < 0 THEN 1 ELSE 0 END SOLD_MORE_THAN_HAD
, CASE WHEN (R13_AVG_OH_PER_DAY + R13_RCVD_QTY_FIN - R13_UNTS) < 0 THEN 1 ELSE 0 END SOLD_MORE_THAN_HAD_FIN

, COALESCE(SAFE_DIVIDE(PREV_1_DAY_OH,PREV_1_DAY_UNTS),-1) PREV_1_DAY_OH_TO_UNTS
, COALESCE(SAFE_DIVIDE(PREV_2_DAY_OH,PREV_2_DAY_UNTS),-1) PREV_2_DAY_OH_TO_UNTS
, COALESCE(SAFE_DIVIDE(PREV_3_DAY_OH,PREV_3_DAY_UNTS),-1) PREV_3_DAY_OH_TO_UNTS
, COALESCE(SAFE_DIVIDE(PREV_4_DAY_OH,PREV_4_DAY_UNTS),-1) PREV_4_DAY_OH_TO_UNTS
, COALESCE(SAFE_DIVIDE(PREV_5_DAY_OH,PREV_5_DAY_UNTS),-1) PREV_5_DAY_OH_TO_UNTS
, COALESCE(SAFE_DIVIDE(PREV_6_DAY_OH,PREV_6_DAY_UNTS),-1) PREV_6_DAY_OH_TO_UNTS
, D. WINDOW_
, D. DATA_IND
FROM `{staging_project}.{staging_dataset}.PACKDOWN_MODEL_DATA_STAGE02` A
INNER JOIN `{staging_project}.{staging_dataset}.PACKDOWN_MODEL_DATA_STAGE03` B
    ON A. CAL_DT = B. CAL_DT
    AND A. SKU_STR_ID = B. SKU_STR_ID

INNER JOIN `{staging_project}.{staging_dataset}.PACKDOWN_MODEL_DATA_STAGE04` C
    ON A. CAL_DT = C. CAL_DT
    AND A. SKU_STR_ID = C. SKU_STR_ID

INNER JOIN `{staging_project}.{staging_dataset}.PACKDOWN_MODEL_DATA_STAGE05` D
    ON A. CAL_DT = D. CAL_DT
    AND A. SKU_STR_ID = D. SKU_STR_ID

);
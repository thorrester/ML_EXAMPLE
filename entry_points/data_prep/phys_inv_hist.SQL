CREATE OR REPLACE TABLE `{staging_project}.{staging_dataset}.PHYS_INV_HIST`
PARTITION BY PHY_INV_DT
AS(
SELECT
  D. FSCL_WK_END_DT
, A. PHY_INV_DT
, B. STR_NBR
, B. SKU_NBR
, B. SKU_CRT_DT
, DATE_SUB(PHY_INV_DT, INTERVAL 1 DAY) PREDICTION_DATE
, CONCAT(CAST(A. SKU_NBR AS STRING),'-', CAST(A. SKU_CRT_DT AS STRING), '-', A. STR_NBR) AS SKU_STR_ID
, A. BINV_OH_QTY
, A. AINV_OH_QTY
, A. CURR_RETL_AMT
, ZERO_FLG
, NEG_FLG
, NULL_FLG
FROM(
SELECT DISTINCT
    PHY_INV_DT
    , STR_NBR
    , SKU_NBR
    , SKU_CRT_DT
    , BINV_OH_QTY                -- USED IN `analytics-store-ops-thd.PACKDOWN_ML.ADJUSTED_OH`
    , AINV_OH_QTY                -- USED IN `analytics-store-ops-thd.PACKDOWN_ML.ADJUSTED_OH`
    , CURR_RETL_AMT
    , CASE WHEN COALESCE(BINV_OH_QTY,0) = 0 AND COALESCE(AINV_OH_QTY,0) = 0 THEN 1 ELSE 0 END ZERO_FLG   --FLAG SKUS WHERE BEFORE AND AFTER ARE ZERO
    , CASE WHEN COALESCE(BINV_OH_QTY,0) <= 0 AND COALESCE(AINV_OH_QTY,0) < 0 THEN 1 ELSE 0 END NEG_FLG   --FLAG SKUS WHERE BEFORE <0 AND AFTER = ZERO
    , CASE WHEN BINV_OH_QTY IS NULL OR AINV_OH_QTY IS NULL THEN 1 ELSE 0 END NULL_FLG                      --FLAG OUT SKUS WHERE BERFORE OR AFTER IS NULL
    , SUM(1) OVER(PARTITION BY PHY_INV_DT, SKU_NBR, SKU_CRT_DT, STR_NBR ORDER BY LAST_UPD_TS DESC) as SEQ_UPDT_NBR
    , SUM(1) OVER(PARTITION BY SKU_NBR, SKU_CRT_DT, STR_NBR ORDER BY PHY_INV_DT DESC) SEQ_PHY_INV_DT
    , MAX(PHY_INV_DT) OVER(PARTITION BY STR_NBR) MAX_STR_PHY_INV_DT
    --, LAG(PHY_INV_DT) OVER(PARTITION BY A. SKU_NBR, A. SKU_CRT_DT, A. STR_NBR ORDER BY PHY_INV_DT) PREV_PHY_INV_DT
    --, LAG(AINV_OH_QTY) OVER(PARTITION BY A. SKU_NBR, A. SKU_CRT_DT, A. STR_NBR ORDER BY PHY_INV_DT) PREV_AINV_OH_QTY
    FROM `{edw_project}.{edw_dataset_schn_inv}.STR_PHY_INV_DTL` A
    WHERE 1=1
      AND PHY_INV_DT >= DATE_SUB(CURRENT_DATE, INTERVAL 104 WEEK)
      --AND PHY_INV_DT = '2020-09-10'
  ) A

INNER JOIN `{edw_project}.{edw_dataset_schn_inv}.STR_SKU_ACINV_WKLY` B
    ON CAST(A. SKU_NBR AS INT64) = B. SKU_NBR
    AND A. SKU_CRT_DT = B. SKU_CRT_DT
    AND A. STR_NBR = B. STR_NBR
    AND PHY_INV_DT BETWEEN DATE_SUB(PARTITIONDATE, INTERVAL 6 DAY) and PARTITIONDATE
    AND PARTITIONDATE >= DATE_SUB(CURRENT_DATE, INTERVAL 104 WEEK)

INNER JOIN `{edw_project}.{edw_dataset_shared}.FSCL_WK_HIER_FD` D
    ON PHY_INV_DT BETWEEN D. FSCL_WK_BGN_DT AND D. FSCL_WK_END_DT

INNER JOIN `{staging_project}.{staging_dataset}.THD_SKU_ACTIVE` E
    ON CAST(A. SKU_NBR AS INT64) = E. SKU_NBR
    AND A. SKU_CRT_DT = E. SKU_CRT_DT
    AND A. STR_NBR = E. STR_NBR

WHERE SEQ_UPDT_NBR = 1
--AND IPR_REPLE_IND = 1    -- KEEP IPR SKUS
    AND MAMA_SKU = 1           -- KEEP MAMA SKUS
    AND B. SKU_STAT_CD < 600
    AND SEQ_UPDT_NBR = 1
    AND B. MIN_OH_QTY > 0
    AND A. CURR_RETL_AMT > .01
    AND MAX_STR_PHY_INV_DT = PHY_INV_DT
);